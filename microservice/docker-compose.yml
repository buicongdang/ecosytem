version: '3'
services:

  webserver:
    image: nginx:alpine
    restart: unless-stopped
    container_name: webserver
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./apps/laravel/:/var/www/laravel
      - ./apps/lumen/:/var/www/lumen
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/ssl/
    networks:
      - bytecom-network

  laravel:
    build:
      context: apps/laravel
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    container_name: laravel-app
    tty: true
    environment:
      SERVICE_NAME: laravel
      SERVICE_TAGS: dev
    working_dir: /var/www/laravel
    volumes:
      - ./apps/laravel/:/var/www/laravel
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - bytecom-network

  lumen:
    build:
      context: apps/lumen
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    container_name: lumen-app
    tty: true
    environment:
      SERVICE_NAME: lumen
      SERVICE_TAGS: dev
    working_dir: /var/www/lumen
    volumes:
      - ./apps/lumen/:/var/www/lumen
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - bytecom-network

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: bytecom_mysql
      MYSQL_ROOT_PASSWORD: root
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - bytecom-network

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    tty: true
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DATABASE: bytecom_pgsql
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    networks:
      - bytecom-network

  redis:
    image: "redis:alpine"
    command: redis-server --requirepass password_redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/redis-data:/var/lib/redis
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks: 
      - bytecom-network

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.12.0"
    restart: unless-stopped
    tty: true
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - bytecom-network

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.12.0"
    restart: unless-stopped
    tty: true
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - bytecom-network

  mongo:
    image: "mongo:latest"
    restart: unless-stopped
    container_name: mongo
    tty: true
    ports:
      - "27017:27017"
    networks:
      - bytecom-network
networks:
  bytecom-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
